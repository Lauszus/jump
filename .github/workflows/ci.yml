name: CI
on: [push, pull_request]
defaults:
  run:
    shell: bash
env:
  CARGO_TERM_COLOR: always
concurrency:
  group: CI-${{ github.ref }}
  # Queue on all branches and tags, but only cancel overlapping PR burns.
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' || !startsWith(github.ref, 'refs/tags/') }}
jobs:
  org-check:
    name: Check GitHub Organization
    if: github.repository_owner == 'a-scie'
    runs-on: ubuntu-20.04
    steps:
      - name: Noop
        run: "true"
  ci:
    name: (${{ matrix.os }}) CI
    needs: org-check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            arch: linux-x86_64
            examples: [python, java, node]
          - os: macos-11
            arch: macos-x86_64
            examples: [python, java, node]
          - os: windows-2022
            arch: windows-x86_64
            examples: [java, node]
    steps:
      - uses: actions/checkout@v3
      - name: Check Formatting
        run: cargo fmt --check --all
      - name: Lint
        run: cargo clippy --all
      - name: Test
        run: cargo test --all
      - name: Build & Package
        run: cargo run --release -p package dist
      - name: Install coreutils for Mac
        if: ${matrix.os} == 'macos-11'
        run: brew install coreutils
      - name: Python Example (Pants)
        if: contains(matrix.examples, 'python')
        run: |
          set -x
          examples/prepare.sh python
          dist/scie-jump* examples/python/lift.${{ matrix.arch }}.json
          time RUST_LOG=trace ./pants --no-pantsd -V
          time ./pants --no-pantsd -V
          
          # Use the built-in BusyBox functionality via env var.
          SCIE_BOOT=inspect ./pants interpreter --verbose --indent 2
      - name: Java Example (Coursier)
        if: contains(matrix.examples, 'java')
        run: |
          set -x
          if [ "windows-2022" == "${{ matrix.os }}" ]; then
            pwsh examples/prepare.ps1 java
          else
            examples/prepare.sh java
          fi
          dist/scie-jump* examples/java/lift.${{ matrix.arch }}.json

          SCIE=split ./coursier split
          sha256sum coursier* > split/coursier.sha256sum
          cd split && ./scie-jump
          sha256sum --check coursier.sha256sum
          sha256sum coursier* ../coursier*
          cd .. && rm -rf split

          time RUST_LOG=debug ./coursier version
          time ./coursier java-home
          time ./coursier launch org.pantsbuild:jar-tool:0.0.17 \
            -M org.pantsbuild.tools.jar.Main -- -h
      - name: Node Example (npm and cowsay)
        if: contains(matrix.examples, 'node')
        run: |
          set -x
          if [ "windows-2022" == "${{ matrix.os }}" ]; then
            pwsh examples/prepare.ps1 node
            npm_exe=npm.exe
          else
            examples/prepare.sh node
            npm_exe=npm
          fi
          dist/scie-jump* examples/node/lift.${{ matrix.arch }}.json
          
          SCIE=split ./node.js split
          sha256sum node.js* > split/node.js.sha256sum
          cd split && ./scie-jump
          sha256sum --check node.js.sha256sum
          sha256sum node.js* ../node.js*
          cd .. && rm -rf split

          # Use the built-in BusyBox functionality via binary base name.
          cd examples/node && ln ../../node.js ${npm_exe}
          ./npm install cowsay
          
          # Build a scie from another scie's tip-embedded scie-jump.
          SCIE=boot-pack ../../node.js ./cowsay-lift.${{ matrix.arch }}.json
          rm -rf npm node_modules* package*.json
          ./cowsay.js -b 'All the binaries belong to us!'
          
          SCIE=split ./cowsay.js split
          sha256sum cowsay.js* > split/cowsay.js.sha256sum
          cd split && ./scie-jump
          sha256sum --check cowsay.js.sha256sum
          sha256sum cowsay.js* ../cowsay.js*
          cd .. && rm -rf split
